@using GameStore.Web.Infrastructure.Helpers
@model GameStore.Web.Models.AllGamesViewModel

@{
	ViewBag.Title = "List All";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List All</h1>

@using (Html.BeginForm("ListAll", "Game", FormMethod.Get, new { id = "GameFilter" }))
{
	<h2>Filter</h2>
	<b>@Html.LabelFor(m => m.Filter.GenresData)</b>
	<p>
		@foreach (var genre in Model.Filter.GenresData)
		{
			@Html.CreateCheckbox("Filter.GenresInput", genre.Name, genre.Id, Model.Filter.GenresInput)
		}
	</p>
	<b>@Html.LabelFor(m => m.Filter.PlatformTypesData)</b>
	<p>
		@foreach (var platformType in Model.Filter.PlatformTypesData)
		{
			@Html.CreateCheckbox("Filter.PlatformTypesInput", platformType.Type, platformType.Id, Model.Filter.PlatformTypesInput)
		}
	</p>
	<b>@Html.LabelFor(m => m.Filter.PublishersData)</b>
	<p>
		@foreach (var publisher in Model.Filter.PublishersData)
		{
			@Html.CreateCheckbox("Filter.PublishersInput", publisher.CompanyName, publisher.Id, Model.Filter.PublishersInput)
		}
	</p>
	<b>@Html.LabelFor(m => m.Filter.SortOptions)</b>
	<p>
		@Html.EnumDropDownListFor(m => m.Filter.SortOptions)
	</p>
	<b>@Html.LabelFor(m => m.Filter.MinPrice)</b>
	<p>
		@Html.EditorFor(m => m.Filter.MinPrice)
		@Html.ValidationMessageFor(m => m.Filter.MinPrice)
	</p>
	<b>@Html.LabelFor(m => m.Filter.MaxPrice)</b>
	<p>
		@Html.EditorFor(m => m.Filter.MaxPrice)
		@Html.ValidationMessageFor(m => m.Filter.MaxPrice)
	</p>
	<b>@Html.LabelFor(m => m.Filter.DateOptions)</b>
	<p>
		@Html.CreateRadioButtonGroup("Filter.DateOptions", Model.Filter.DateOptions)
	</p>
	<b>@Html.LabelFor(m => m.Filter.GameName)</b>
	<p>
		@Html.EditorFor(m => m.Filter.GameName)
		@Html.ValidationMessageFor(m => m.Filter.GameName)
	</p>

	<b>@Html.LabelFor(m => m.PageSize)</b>
	<p>
		@Html.DropDownListFor(m => m.PageSize, new List<SelectListItem>
		{
			new SelectListItem {Selected = true, Text = "10", Value = "10"},
			new SelectListItem {Text = "20", Value = "20"},
			new SelectListItem {Text = "50", Value = "50"},
			new SelectListItem {Text = "100", Value = "100"},
			new SelectListItem {Text = "All", Value = "0"}
		})
	</p>


	<input type="hidden" id="CurrentPage" name="CurrentPage" value=@Model.CurrentPage />
	<input type="hidden" id="TotalItems" name="TotalItems" value=@Model.TotalItems />
	<input type="hidden" id="TotalPages" name="TotalPages" value=@Model.TotalPages />
	<input type="hidden" id="FilterIsChanged" name="FilterIsChanged" value=@Model.FilterIsChanged />
	<p>
		<button onclick="changeFilter(); submit();">Filter</button>
	</p>

	<h2>Games</h2>
	<hr/>

	foreach (var game in Model.Games)
	{
		<b>@Html.LabelFor(m => game.Key)</b>
		<p>@Html.DisplayFor(m => game.Key)</p>
		<b>@Html.LabelFor(m => game.Name)</b>
		<p>@Html.ActionLink(game.Name, "Show", new { gameKey = game.Key })</p>
		<b>@Html.LabelFor(m => game.Description)</b>
		<p>@Html.DisplayFor(m => game.Description)</p>
		<b>@Html.LabelFor(m => game.Price)</b>
		<p>@Html.DisplayFor(m => game.Price)</p>
		<b>@Html.LabelFor(m => game.UnitsInStock)</b>
		<p>@Html.DisplayFor(m => game.UnitsInStock)</p>
		<b>@Html.LabelFor(m => game.Discontinued)</b>
		<p>@Html.DisplayFor(m => game.Discontinued)</p>

		if (game.PlatformTypesData.Count != 0)
		{
			<b>@Html.LabelFor(m => game.PlatformTypesData)</b>

			foreach (var platformType in game.PlatformTypesData)
			{
				<p>@platformType.Type</p>
			}
		}

		if (game.GenresData.Count != 0)
		{
			<b>@Html.LabelFor(m => game.GenresData)</b>

			foreach (var genre in game.GenresData)
			{
				<p>@genre.Name</p>
			}
		}

		if (game.PublishersData.Count != 0)
		{
			var name = game.PublishersData.First().CompanyName;
			<b>@Html.LabelFor(m => game.PublishersData)</b>
			<p>@Html.ActionLink(name, "Show", "Publisher", new { companyName = name }, null)</p>
		}

		<hr />
	}

	if (Model.TotalItems > Model.PageSize)
	{
		if (Model.CurrentPage > 1)
		{
			<button onclick="previousPage(); submit();">Previous</button>
		}

		if (Model.CurrentPage < Model.TotalPages)
		{
			<button onclick="nextPage(); submit();">Next</button>
		}
	}
}

<script>
	function previousPage() {
		document.getElementById('CurrentPage').value--;
	}

	function nextPage() {
		document.getElementById('CurrentPage').value++;
	}

	function submit() {
		document.getElementById('GameFilter').submit();
	}

	function changeFilter() {
		document.getElementById('FilterIsChanged').value = true;
	}
</script>