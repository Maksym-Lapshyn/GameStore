@model GameStore.Web.Models.AllGamesViewModel

@{
	ViewBag.Title = "List All";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List All</h1>

@using (Html.BeginForm("ListAll", "Game", FormMethod.Get, new { id = "listAll" }))
{
	<h2>Filter</h2>
	<b>@Html.LabelFor(m => m.Filter.GenresInput)</b>
	<p>
		@Html.ListBoxFor(m => m.Filter.GenresInput, new SelectList(Model.Filter.GenresData, "Id", "Name"))
	</p>
	<b>@Html.LabelFor(m => m.Filter.PlatformTypesInput)</b>
	<p>
		@Html.ListBoxFor(m => m.Filter.PlatformTypesInput, new SelectList(Model.Filter.PlatformTypesData, "Id", "Type"))
	</p>
	<b>@Html.LabelFor(m => m.Filter.PublishersInput)</b>
	<p>
		@Html.ListBoxFor(m => m.Filter.PublishersInput, new SelectList(Model.Filter.PublishersData, "Id", "CompanyName"))
	</p>
	<b>@Html.LabelFor(m => m.Filter.SortOptions)</b>
	<p>
		@Html.EnumDropDownListFor(m => m.Filter.SortOptions)
	</p>
	<b>@Html.LabelFor(m => m.Filter.MinPrice)</b>
	<p>
		@Html.EditorFor(m => m.Filter.MinPrice)
		@Html.ValidationMessageFor(m => m.Filter.MinPrice)
	</p>
	<b>@Html.LabelFor(m => m.Filter.MaxPrice)</b>
	<p>
		@Html.EditorFor(m => m.Filter.MaxPrice)
		@Html.ValidationMessageFor(m => m.Filter.MaxPrice)
	</p>
	<b>@Html.LabelFor(m => m.Filter.DateOptions)</b>
	<p>
		@Html.EnumDropDownListFor(m => m.Filter.DateOptions)
	</p>
	<b>@Html.LabelFor(m => m.Filter.GameName)</b>
	<p>
		@Html.EditorFor(m => m.Filter.GameName)
		@Html.ValidationMessageFor(m => m.Filter.GameName)
	</p>

	for (var i = 0; i < Model.Filter.PlatformTypesData.Count; i++)
	{
		@Html.HiddenFor(m => m.Filter.PlatformTypesData[i].Id)
		@Html.HiddenFor(m => m.Filter.PlatformTypesData[i].Type)
	}

	for (var i = 0; i < Model.Filter.GenresData.Count; i++)
	{
		@Html.HiddenFor(m => m.Filter.GenresData[i].Id)
		@Html.HiddenFor(m => m.Filter.GenresData[i].Name)
	}

	for (var i = 0; i < Model.Filter.PublishersData.Count; i++)
	{
		@Html.HiddenFor(m => m.Filter.PublishersData[i].Id)
		@Html.HiddenFor(m => m.Filter.PublishersData[i].CompanyName)
		@Html.HiddenFor(m => m.Filter.PublishersData[i].Description)
		@Html.HiddenFor(m => m.Filter.PublishersData[i].HomePage)
	}

	<b>@Html.LabelFor(m => m.Paginator.PageSize)</b>
	<p>
		@Html.DropDownListFor(m => m.Paginator.PageSize, new List<SelectListItem>
		{
			new SelectListItem {Selected = true, Text = "10", Value = "10"},
			new SelectListItem {Text = "20", Value = "20"},
			new SelectListItem {Text = "50", Value = "50"},
			new SelectListItem {Text = "100", Value = "100"},
			new SelectListItem {Text = "All", Value = "0"}
		})
	</p>

	@Html.HiddenFor(m => m.Paginator.CurrentPage)
	@Html.HiddenFor(m => m.Paginator.TotalPages)
	@Html.HiddenFor(m => m.Paginator.TotalItems)
	<p>
		<button type="submit">Filter</button>
	</p>

	<h2>Games</h2>
	<hr/>

	foreach (var game in Model.Games)
	{
		<b>@Html.LabelFor(m => game.Key)</b>
		<p>@Html.DisplayFor(m => game.Key)</p>
		<b>@Html.LabelFor(m => game.Name)</b>
		<p>@Html.DisplayFor(m => game.Name)</p>
		<b>@Html.LabelFor(m => game.Description)</b>
		<p>@Html.DisplayFor(m => game.Description)</p>
		<b>@Html.LabelFor(m => game.Price)</b>
		<p>@Html.DisplayFor(m => game.Price)</p>
		<b>@Html.LabelFor(m => game.UnitsInStock)</b>
		<p>@Html.DisplayFor(m => game.UnitsInStock)</p>
		<b>@Html.LabelFor(m => game.Discontinued)</b>
		<p>@Html.DisplayFor(m => game.Discontinued)</p>

		if (game.PlatformTypesData.Count != 0)
		{
			<b>@Html.LabelFor(m => game.PlatformTypesData)</b>

			for (var i = 0; i < game.PlatformTypesData.Count; i++)
			{
				<p>@game.PlatformTypesData[i].Type</p>
			}
		}

		if (game.GenresData.Count != 0)
		{
			<b>@Html.LabelFor(m => game.GenresData)</b>

			for (var i = 0; i < game.GenresData.Count; i++)
			{
				<p>@game.GenresData[i].Name</p>
			}
		}

		if (game.PublishersData.Count != 0)
		{
			var name = game.PublishersData.First().CompanyName;
			<b>@Html.LabelFor(m => game.PublishersData)</b>
			<p>@Html.ActionLink(name, "Show", "Publisher", new { companyName = name }, null)</p>
		}

		<hr />
	}

	if (Model.Paginator.TotalItems > Model.Paginator.PageSize)
	{
		if (Model.Paginator.CurrentPage > 1)
		{
			<button type="submit" onclick="previousPage(); submit();">Previous</button>
		}

		if (Model.Paginator.CurrentPage < Model.Paginator.TotalPages)
		{
			<button type="submit" onclick="nextPage(); submit();">Next</button>
		}
	}
}

<script>
	function previousPage() {
		document.getElementById('Paginator_CurrentPage').value--;
	}

	function nextPage() {
		document.getElementById('Paginator_CurrentPage').value++;
	}

	function submit() {
		document.getElementById('listAll').submit();
	}
</script>