@using GameStore.Web.Models
@using GameStore.Common.Enums
@model CompositeCommentsViewModel

@{
	ViewBag.Title = GlobalResource.NewComment;
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@GlobalResource.NewComment</h1>
<hr/>

@if (Model.Comments.Count != 0)
{
	foreach (var comment in Model.Comments)
	{
		if (comment.IsDeleted && (!User.Identity.IsAuthenticated || !User.IsInRole(AccessLevel.Moderator.ToString())))
		{
			continue;
		}

		<b>@Html.LabelFor(m => comment.Name):</b>
		<p>@Html.DisplayFor(m => comment.Name)</p>
		<b>@Html.LabelFor(m => comment.Body):</b>
		<p>@Html.DisplayFor(m => comment.Body)</p>
		<p>
			@if (!User.Identity.IsAuthenticated || User.Identity.IsAuthenticated && !User.IsInRole(AccessLevel.Administrator.ToString()))
			{
				<button data-id=@comment.Id data-name=@comment.Name class="reply btn btn-default">@GlobalResource.ToReply</button>
			}

			@if (User.Identity.IsAuthenticated && !User.IsInRole(AccessLevel.Moderator.ToString()))
			{
				@Html.ActionLink(GlobalResource.ToDelete, "Delete", "Comments", new { key = comment.Id }, new { @class = "btn btn-danger" })
			}
		</p>

		if (comment.ChildComments.Count != 0)
		{
			Html.RenderPartial("ShowChilds", comment.ChildComments);
		}
	}
}
else
{
	<p>@GlobalResource.ThereAreNoCommentsForThisGame</p>
}

@if (!Model.GameIsDeleted && !User.Identity.IsAuthenticated || User.Identity.IsAuthenticated && !User.IsInRole(AccessLevel.Administrator.ToString()))
{
	using (Html.BeginForm("New", "Comments", FormMethod.Post, new { @id = "CommentForm" }))
	{
		@Html.HiddenFor(m => m.GameIsDeleted)
		@Html.HiddenFor(m => m.NewComment.GameKey)
		@Html.HiddenFor(m => m.NewComment.ParentCommentAuthor)
		@Html.HiddenFor(m => m.NewComment.ParentCommentId)
		@Html.HiddenFor(m => m.NewComment.Name)
		<div id="replyTo">
			@if (Model.NewComment.ParentCommentAuthor != null)
			{
				<p>
					<b>@GlobalResource.ReplyTo: @Model.NewComment.ParentCommentAuthor</b>
				</p>
			}
		</div>
		<b>@Html.LabelFor(m => m.NewComment.Name)</b>
		<p>
			@Html.DisplayFor(m => m.NewComment.Name)
		</p>
		<b>@Html.LabelFor(m => m.NewComment.Body)</b>
		<p>
			@Html.TextAreaFor(m => m.NewComment.Body, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.NewComment.Body)
		</p>
		<p>
			<button id="button" type="submit" class="btn btn-default">@GlobalResource.ToAddComment</button>
		</p>
	}
}

@section Scripts
{
	<script src="~/Scripts/commentScripts.js"></script>
}