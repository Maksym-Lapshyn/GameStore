@using GameStore.Web.Models
@model CompositeCommentsViewModel

@{
	ViewBag.Title = "New Comment";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>New Comment</h1>

@foreach (var comment in Model.Comments)
{
	<b>@Html.LabelFor(m => comment.Name):</b>
	<p>@Html.DisplayFor(m => comment.Name)</p>
	<b>@Html.LabelFor(m => comment.Body):</b>
	<p>@Html.DisplayFor(m => comment.Body)</p>
	<p>
		<button data-id=@comment.Id data-name=@comment.Name class="reply btn btn-default">Reply</button>
	</p>

	if (comment.ChildComments.Count != 0)
	{
		Html.RenderPartial("ListAllChilds", comment.ChildComments);
	}
}

@using (Html.BeginForm("NewComment", "Comments", FormMethod.Post, new { @id = "CommentForm" }))
{
	@Html.HiddenFor(m => m.NewComment.GameKey)
	@Html.HiddenFor(m => m.NewComment.ParentCommentName)
	@Html.HiddenFor(m => m.NewComment.ParentCommentId)
	<div id="replyTo">
		@if (Model.NewComment.ParentCommentName != null)
		{
		<p>
			<b>Reply to: @Model.NewComment.ParentCommentName</b>
		</p>
		}
	</div>
	<b>@Html.LabelFor(m => m.NewComment.Name)</b>
	<p>
		@Html.TextBoxFor(m => m.NewComment.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.NewComment.Name)
	</p>
	<b>@Html.LabelFor(m => m.NewComment.Body)</b>
	<p>
		@Html.TextBoxFor(m => m.NewComment.Body, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.NewComment.Body)
	</p>
	<p>
		<button id="button" type="submit" class="btn btn-default">Create</button>
	</p>
}

@section Scripts
{
	<script src="~/Scripts/commentScripts.js"></script>
}